{"version":3,"file":"static/webpack/static\\development\\pages\\order.js.ff657da323e1d8b24009.hot-update.js","sources":["webpack:///./components/Order.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport Proptypes from 'prop-types'\r\nimport {Query} from 'react-apollo'\r\nimport {format} from 'date-fns'\r\nimport Head from 'next/head'\r\nimport gql from 'graphql-tag'\r\nimport formatMoney from '../lib/formatMoney'\r\nimport Error from './ErrorMessage'\r\nimport OrderStyles from './styles/OrderStyles'\r\n\r\nconst SINGLE_ORDER_QUERY = gql`\r\n    query SINGLE_ORDER_QUERY($id: ID!){\r\n        order(id: $id){\r\n            id\r\n            charge\r\n            total\r\n            # createdAt\r\n            user {\r\n                id\r\n            }\r\n            items{\r\n                id\r\n                title\r\n                description\r\n                price\r\n                image\r\n                quantity\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nclass Order extends Component {\r\n\r\n    static propTypes = {\r\n        id: Proptypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Query query={SINGLE_ORDER_QUERY} variables={{id: this.props.id}}>\r\n                {({data, loading, error})=>{\r\n                if(error) return <Error error={error}></Error>\r\n                if(loading) return <p> loading..</p>\r\n                console.log(data)\r\n                const order = data.order;\r\n\r\n                return (\r\n                    <OrderStyles>\r\n                        <Head>\r\n                <title>Dope Store - Order {order.id}</title>\r\n                        </Head>\r\n\r\n                        <p> \r\n                            <span>Order Id: </span>\r\n                           <span>{this.props.id}</span> </p>\r\n\r\n                           <p> \r\n                            <span>Charge </span>\r\n                           <span>{order.charge}</span> </p>\r\n\r\n                            <p>\r\n                           <span>Order Total</span>\r\n                           <span>{formatMoney(order.total/100)}</span> </p>\r\n\r\n                           <p>\r\n                           <span>item Count</span>\r\n                           <span>{order.items.length}</span> </p>\r\n\r\n                           <div className=\"items\">\r\n                               {order.items.map(item => (\r\n                                   <div key={item.id}className=\"order-item\">\r\n                                   \r\n\r\n                                    <div>\r\n                                    <img src={item.image} alt={item.title}></img>\r\n                               <h2>{ item.title}</h2>\r\n\r\n                               <p> Qty {item.quantity}</p>\r\n                               <p> Each {item.price}.00 Rs</p>\r\n                                    </div>\r\n\r\n                                   </div>\r\n                               ))}\r\n                           </div>\r\n                        \r\n                                \r\n                            \r\n\r\n                    </OrderStyles>\r\n\r\n               \r\n            \r\n             )\r\n            }}</Query>\r\n        )\r\n    }\r\n}\r\nexport default  Order;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAqBA;;;;;;;;;;;;;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAwBA;AAEA;;;;AAhEA;AACA;AADA;AAGA;AADA;AACA;AA+DA;;;;A","sourceRoot":""}