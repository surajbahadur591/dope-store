{"version":3,"file":"static/webpack/static\\development\\pages\\sell.js.e2ac9e7c9fcaf2c2e25c.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { Mutation } from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport Form from './styles/Form'\r\nimport formatMoney from '../lib/formatMoney'\r\nimport Error from './ErrorMessage'\r\nimport Router from 'next/router'\r\n\r\nconst CREATE_ITEM_MUTATION = gql`\r\n    mutation CREATE_ITEM_MUTATION (\r\n            $title: String!,\r\n            $description: String!,\r\n            $price: Int!,\r\n            $image: String,\r\n            $largeImage: String,\r\n            ) {\r\n\r\n        createItem(\r\n            title : $title\r\n            description : $description\r\n            price : $price\r\n            image : $image\r\n            largeImage : $largeImage\r\n        ) {\r\n            id\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n\r\n class CreateItem extends Component {\r\n     state = {\r\n         title : 'Enter Name of Your product',\r\n         description : 'What is your Product',\r\n         image : '',\r\n         largeImage : '',\r\n         price : 0,\r\n     };\r\n     handleChange = (e) => {\r\n        const { name, type, value } = e.target;\r\n        const val = type == 'number' ? parseFloat(value) : value;\r\n         \r\n         this.setState({ [name] : val })\r\n     }\r\n\r\n     uploadFile = async e => {\r\n         console.log(\"uploading...\")\r\n\r\n         const files = e.target.files;\r\n         const data = new FormData();\r\n         data.append('file', files[0]);\r\n         data.append('upload_preset', 'dopestore')\r\n\r\n         const res = await fetch ('https://api.cloudinary.com/v1_1/dltg5ixua/image/upload', {\r\n             method: 'POST',\r\n             body : data\r\n         });\r\n         const file = await res.json();\r\n         console.log(file);\r\n         this.setState({\r\n             image : file.secure_url,\r\n             largeImage : file.eager[0].secure_url,\r\n         })\r\n     }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\r\n                {(createItem, {loading, error, called, data})=> (\r\n\r\n               \r\n            <Form onSubmit={ async e => {\r\n                e.preventDefault();\r\n                // console.log(this.state)\r\n                const res = await createItem();\r\n\r\n\r\n                console.log(res)\r\n                Router.push( {\r\n                    pathname :'/item',\r\n                    query : {\r\n                        id: res.data.createItem.id\r\n                    }\r\n                })\r\n\r\n\r\n            }}>\r\n\r\n                {this.state.image && <img width=\"200\" src={this.state.image} alt=\"preview\"/>}\r\n\r\n                <Error error={error}/>\r\n\r\n                <fieldset disabled={loading} aria-busy={loading}>\r\n                <label htmlFor =\"File\">Image\r\n                    <input type=\"file\" id=\"dile\" name=\"file\" placeholder='upload Image' required\r\n                    \r\n                    onChange={this.uploadFile}\r\n                    ></input>\r\n                    </label>\r\n\r\n\r\n                    <label htmlFor =\"title\">Title\r\n                    <input type=\"text\" id=\"title\" name=\"title\" placeholder='Title' required\r\n                    value={this.state.title}\r\n                    onChange={this.handleChange}\r\n                    ></input>\r\n                    </label>\r\n\r\n                    <label htmlFor =\"price\">Price\r\n                    <input type=\"number\" id=\"price\" name=\"price\" placeholder='Price' required\r\n                    value={this.state.price}\r\n                    onChange={this.handleChange}\r\n                    ></input>\r\n                    </label>\r\n\r\n                    <label htmlFor =\"description\">Description\r\n                    <textarea id=\"description\" name=\"description\" placeholder='Enter a Description' required\r\n                    value={this.state.description}\r\n                    onChange={this.handleChange}\r\n                    ></textarea>\r\n                    </label>\r\n\r\n                    <button type=\"Submit\">Submit</button>\r\n                </fieldset>\r\n                \r\n            </Form>\r\n             )}\r\n                \r\n             </Mutation>\r\n        )\r\n    }\r\n}\r\nexport default CreateItem;\r\nexport {CREATE_ITEM_MUTATION }; \r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAsBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AANA;AAAA;AASA;AACA;AAFA;AACA;AATA;AAQA;AARA;AAAA;AACA;AADA;AAYA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAmBA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AADA;AAFA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAitDA;AA8DA;;;;AArGA;AACA;AAsGA;;;;;A","sourceRoot":""}