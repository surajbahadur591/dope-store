{"version":3,"file":"static/webpack/static\\development\\pages\\permission.js.ada0bc2c673250190b02.hot-update.js","sources":["webpack:///./components/Permissions.js"],"sourcesContent":["import {Query , Mutation} from 'react-apollo'\r\nimport Error from './ErrorMessage'\r\nimport gql from 'graphql-tag'\r\nimport { render } from 'react-dom';\r\nimport React from 'react'\r\nimport Table from './styles/Table'\r\nimport SickButton from './styles/SickButton'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ALL_USERS_QUERY = gql`\r\n    query{\r\n        users{\r\n            id\r\n            name\r\n            email\r\n            permissions\r\n        }\r\n    }\r\n`;\r\n\r\nconst UPDATE_PERMISSION_MUTATION = gql`\r\n    mutation UPDATE_PERMISSION_MUTATION($permissions: [Permission], \r\n    $userId: ID!){\r\n        updatedPermissions(permissions: $permissions,\r\n        userId: $userId) {\r\n            id\r\n            permissions\r\n            name\r\n            email\r\n\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nconst possiblePermissions = [\r\n    'ADMIN',\r\n    'USER',\r\n    'ITEMCREATE',\r\n    'ITEMUPDATE',\r\n    'ITEMDELETE',\r\n    'PERMISSIONUPDATE',\r\n]\r\n\r\n\r\nconst Permissions = (props) => {\r\n    return (\r\n\r\n        <Query query={ALL_USERS_QUERY}>\r\n\r\n            {({data, loading, error})=> ( console.log (data) ||  \r\n                <div><Error error={error}></Error>\r\n                <div>\r\n                    <h1> Manage User's Permission</h1>\r\n\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n    {possiblePermissions.map (permission => <th key={permission}> {permission}</th>)}\r\n                            <th>Here</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.users.map(user => <UserPermission key={user.id}user={user}/>)}\r\n                        </tbody>\r\n                    </Table>\r\n\r\n\r\n                </div>\r\n\r\n                </div>\r\n                \r\n\r\n            )}\r\n        </Query>\r\n        \r\n    )\r\n    }\r\n\r\n\r\nclass UserPermission extends React.Component {\r\n\r\n    static propTypes ={\r\n        user: PropTypes.shape({\r\n            name: PropTypes.string,\r\n            email: PropTypes.string,\r\n            id: PropTypes.string,\r\n            permission: PropTypes.array,\r\n            \r\n        }).isRequired,\r\n    };\r\n\r\n    state = {\r\n        permissions: this.props.user.permissions,\r\n    };\r\n    handlePermissionChange =(e) => {\r\n        const checkbox = e.target;\r\n        \r\n        let updatedPermissions = [...this.state.permissions];\r\n        if (checkbox.checked){\r\n            updatedPermissions.push(checkbox.value);\r\n        } else {\r\n            updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\r\n        }\r\n        this.setState( {\r\n            permissions: updatedPermissions,\r\n        })\r\n        console.log(updatedPermissions)\r\n\r\n\r\n    }\r\n    render(){\r\n\r\n        const user = this.props.user;\r\n        return (\r\n            <Mutation mutation={UPDATE_PERMISSION_MUTATION} variables={{\r\n                permissions: this.state.permissions,\r\n                userId: this.props.user.id\r\n            }}>\r\n                { (updatePermissions , loading, error )=> (\r\n\r\n\r\n             \r\n            \r\n            <tr>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                {possiblePermissions.map(permission => (\r\n                    <td key={permission}>\r\n                        <label htmlFor={`${user.id}-permission-${permission}`}>\r\n\r\n                            <input id={`${user.id}-permission-${permission}`} type=\"checkbox\" checked={this.state.permissions.includes(permission)}\r\n                            value={permission}\r\n                            onChange={this.handlePermissionChange}></input>\r\n                        </label>\r\n                    </td>\r\n                ))}\r\n                <td> \r\n                        <SickButton>Update</SickButton>\r\n                </td>\r\n            </tr>\r\n               )}\r\n               </Mutation>\r\n        )\r\n    }\r\n}\r\nexport default Permissions\r\n\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAWA;AAefA;AA6BA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAYA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AADA;AACA;AAEA;AAGA;AACA;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAyBA;;;;AAhEA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAJA;AADA;AACA;AA+DA;;;;A","sourceRoot":""}