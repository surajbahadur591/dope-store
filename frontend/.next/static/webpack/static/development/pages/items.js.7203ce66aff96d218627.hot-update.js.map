{"version":3,"file":"static/webpack/static\\development\\pages\\items.js.7203ce66aff96d218627.hot-update.js","sources":["webpack:///./components/Items.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport {Query} from 'react-apollo';\r\nimport gql from 'graphql-tag'\r\nimport  styled from 'styled-components'\r\nimport Item from './Item'\r\n\r\nimport Pagination from './Pagination'\r\n\r\n\r\n\r\nconst Center = styled.div`\r\ntext-align: center;\r\n`;\r\n\r\nconst ALL_ITEMS_QUERY = gql`\r\n    query ALL_ITEMS_QUERY {\r\n        items {\r\n            id\r\n            title\r\n            price\r\n            description\r\n            image\r\n            largeImage\r\n        }\r\n    }\r\n`;\r\n\r\nconst ItemsList = styled.div`\r\ndisplay:grid;\r\ngrid-template-columns: 1fr 1fr;\r\ngrid-gap : 50px;\r\nmax-width : ${props => props.theme.maxWidth};\r\nmargin: 0 auto;\r\n`;\r\n\r\nclass Items extends Component {\r\n    render() {\r\n        return (\r\n            <Center>\r\n                <Pagination page={this.props.page}></Pagination>\r\n\r\n                <Query query={ALL_ITEMS_QUERY}>\r\n                { ({data, error, loading}) => {\r\n                 \r\n                if (loading) return <p>Loading...</p>\r\n                if (error) return <p>Error... {error.message}</p> \r\n                return <ItemsList>\r\n\r\n                {data.items.map(item => <Item key={item.id} item={item}></Item>)}\r\n                </ItemsList>\r\n                }\r\n\r\n                }\r\n\r\n                </Query>\r\n                <Pagination  page={this.props.page}></Pagination> \r\n                \r\n            </Center>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Items;\r\nexport {ALL_ITEMS_QUERY};\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAAA;AAIA;AAaA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAxBA;AACA;AA0BA;;;;;A","sourceRoot":""}