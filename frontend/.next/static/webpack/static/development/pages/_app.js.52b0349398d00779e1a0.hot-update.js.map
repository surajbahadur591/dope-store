{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.52b0349398d00779e1a0.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from 'react'\r\nimport Downshift from 'downshift'\r\nimport Router from 'next/router'\r\nimport {ApolloConsumer} from 'react-apollo'\r\nimport gql from 'graphql-tag'\r\nimport debounce from 'lodash.debounce'\r\nimport {DropDown, DropDownItem, SearchStyles} from './styles/DropDown'\r\n\r\nconst SEARCH_ITEM_QUERY = gql`\r\n    query SEARCH_ITEM_QUERY($searchTerm: String!){\r\n        items(where: {\r\n            OR: [\r\n            {title_contains: $searchTerm},\r\n            {description_contains: $searchTerm}]           \r\n        }) {\r\n            id\r\n            image\r\n            title\r\n        }\r\n    }\r\n`;\r\n\r\nclass AutoComplete extends React.Component {\r\n\r\n    state = {\r\n        items: [],\r\n        loading: false,\r\n    };\r\n\r\n    onChange = debounce(async (e, client) => {\r\n\r\n        console.log(\"searching\")\r\n        this.setState( {\r\n            loading: true\r\n        });\r\n        const res = await client.query({\r\n            query: SEARCH_ITEM_QUERY,\r\n            variables: {searchTerm: e.target.value},\r\n        });\r\n\r\n        this.setState({\r\n            items: res.data.items,\r\n            loading: false,\r\n        })\r\n        // console.log(res);\r\n    }, 350 );\r\n    render(){\r\n        return (\r\n            <SearchStyles>\r\n\r\n                <Downshift>\r\n                    {({getInputProps, getItemProps, isOpen, inputValue, highlightedIndex}) => (\r\n\r\n\r\n\r\n                    \r\n                 <div>\r\n                     <ApolloConsumer>\r\n                         \r\n                        {(client)=> (\r\n                            <input  {...getInputProps({\r\n                                placeholder:\"Search for an Item\",\r\n                                    type: \"search\",\r\n                                    id: \"search\",\r\n                                    className: this.state.loading ? 'loading' : '',\r\n                                    onChange: e =>{e.persist();\r\n                                    this.onChange(e,client);}\r\n\r\n                            })} />\r\n                        )}\r\n                     </ApolloConsumer>\r\n                    {isOpen && (\r\n                            <DropDown>\r\n                            {this.state.items.map(item => <DropDownItem \r\n                            {...getInputProps({item})}\r\n                            key={item.id}>\r\n                                <img width=\"50\" src={item.image} alt={item.title}></img>\r\n                                {item.title}\r\n                            </DropDownItem>)}\r\n                        </DropDown>\r\n\r\n                    )}\r\n                    \r\n\r\n                 </div>\r\n                 )}\r\n                 </Downshift>\r\n            </SearchStyles>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AutoComplete;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAaA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAJA;AAAA;AAOA;AACA;AAAA;AAAA;AAFA;AACA;AAPA;AAMA;AACA;AAIA;AACA;AACA;AAFA;AACA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAtBA;AAsCA;;;;AAnEA;AACA;AAqEA;;;;A","sourceRoot":""}